{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAIP,IAAMQ,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,gBAAiBF,SAASC,cAAc,uBACxCE,eAAgBH,SAASC,cAAc,sBACvCG,YAAaJ,SAASC,cAAc,yBAuBtCH,EAAKC,OAAOM,iBAAiB,UApBO,SAAAC,GAClCA,EAAMC,iBAMN,IAJA,IAAIC,EAAQC,OAAOX,EAAKI,gBAAgBQ,OAClCC,EAASF,OAAOX,EAAKM,YAAYM,OACjCE,EAAOH,OAAOX,EAAKK,eAAeO,OAE/BG,EAAI,EAAGA,EAAIF,EAAQE,GAAK,EAC/BzB,EAAcyB,EAAI,EAAGL,GAClBM,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjBJ,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAE9D6B,OAAM,SAAAJ,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClBJ,EAAA8B,OAAOI,QAAQ,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAG9DkB,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  firstDelayInput: document.querySelector('input[name=\"delay\"]'),\n  delayStepInput: document.querySelector('input[name=\"step\"]'),\n  amountInput: document.querySelector('input[name=\"amount\"]'),\n};\n\nconst makeNotificationsByPromises = event => {\n  event.preventDefault();\n\n  let delay = Number(refs.firstDelayInput.value);\n  const amount = Number(refs.amountInput.value);\n  const step = Number(refs.delayStepInput.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i + 1, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delay += step;\n  }\n};\n\nrefs.formEl.addEventListener('submit', makeNotificationsByPromises);\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","firstDelayInput","delayStepInput","amountInput","addEventListener","event","preventDefault","delay1","Number","value","amount","step","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.4dd50df8.js.map"}